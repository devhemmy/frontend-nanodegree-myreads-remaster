{"version":3,"sources":["Book.js","MainPage.js","BooksAPI.js","Search.js","App.js","index.js"],"names":["Book","state","_this2","this","props","book","map","react_default","a","createElement","key","id","className","style","width","height","backgroundImage","concat","imageLinks","thumbnail","defaultValue","shelf","onChange","event","handleSelect","target","value","disabled","title","authors","Component","MainPage","src_Book","books","filter","react_router_dom","to","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","then","res","json","data","update","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","Search","handleSearch","BooksAPI","console","log","_this","setState","type","placeholder","length","BooksApp","showSearchPage","_this3","react_router","exact","path","render","src_MainPage","src_Search","React","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.bf36f093.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\nclass Book extends Component {\r\n    state = {   }\r\n\r\n    \r\n    render() { \r\n        \r\n        return ( \r\n            this.props.book.map(book => (\r\n                <li key={book.id}>\r\n                <div className=\"book\">\r\n                    <div className=\"book-top\">\r\n                    <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${book.imageLinks.thumbnail})` }}></div>\r\n                    <div className=\"book-shelf-changer\">\r\n                        \r\n                        <select defaultValue={book.shelf ? book.shelf : \"none\"} onChange={(event) => this.props.handleSelect(book,event.target.value)}>\r\n                        <option value=\"move\" disabled>Move to...</option>\r\n                        <option value=\"currentlyReading\" >Currently Reading</option>\r\n                        <option value=\"wantToRead\" >Want to Read</option>\r\n                        <option value=\"read\">Read</option>\r\n                        <option value=\"none\" >None</option>\r\n                        </select>\r\n                        \r\n                    </div>\r\n                    </div>\r\n                    <div className=\"book-title\">{book.title}</div>\r\n                    <div className=\"book-authors\">{book.authors}</div>\r\n                </div>\r\n            </li>\r\n            ))\r\n         );\r\n    }\r\n}\r\n \r\nexport default Book;","import React, { Component } from 'react';\r\nimport Book from \"./Book\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\nclass MainPage extends Component {\r\n    state = {   }\r\n    render() { \r\n        return ( \r\n            <div className=\"app\">\r\n          <div className=\"list-books\">\r\n            <div className=\"list-books-title\">\r\n              <h1>MyReads</h1>\r\n            </div>\r\n            <div className=\"list-books-content\">\r\n              <div>\r\n                <div className=\"bookshelf\">\r\n                  <h2 className=\"bookshelf-title\">Currently Reading</h2>\r\n                  <div className=\"bookshelf-books\">\r\n                    <ol className=\"books-grid\">\r\n                      <Book handleSelect={this.props.handleSelect} book={this.props.books.filter(book => book.shelf===\"currentlyReading\")} />\r\n                    </ol>\r\n                  </div>\r\n                </div>\r\n                <div className=\"bookshelf\">\r\n                  <h2 className=\"bookshelf-title\">Want to Read</h2>\r\n                  <div className=\"bookshelf-books\">\r\n                    <ol className=\"books-grid\">\r\n                    \r\n                    <Book handleSelect={this.props.handleSelect} book={this.props.books.filter(book => book.shelf===\"wantToRead\")} />\r\n                    </ol>\r\n                  </div>\r\n                </div>\r\n                <div className=\"bookshelf\">\r\n                  <h2 className=\"bookshelf-title\">Read</h2>\r\n                  <div className=\"bookshelf-books\">\r\n                    <ol className=\"books-grid\">\r\n                    <Book handleSelect={this.props.handleSelect} book={this.props.books.filter(book => book.shelf===\"read\")} />\r\n                    </ol>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"open-search\">\r\n              <Link to=\"/search\" ><button>Add a book</button></Link>\r\n            </div>\r\n          </div>\r\n       \r\n      </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default MainPage;","\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\"\r\nimport * as BooksAPI from './BooksAPI'\r\nimport Book from \"./Book\"\r\n\r\nclass Search extends Component {\r\n    state = { books: []  }\r\n    handleSearch = (res) =>{\r\n     res &&  BooksAPI.search(res).then(books => {\r\n       console.log(books)\r\n      this.setState({\r\n        books\r\n      })\r\n    })\r\n    }\r\n    render() { \r\n        return ( \r\n\r\n            <div className=\"search-books\">\r\n            <div className=\"search-books-bar\">\r\n              <Link to=\"/\"  className=\"close-search\">Close</Link>\r\n              <div className=\"search-books-input-wrapper\">\r\n                {/*\r\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\r\n                  You can find these search terms here:\r\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\r\n\r\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\r\n                  you don't find a specific author or title. Every search is limited by search terms.\r\n                */}\r\n                <input type=\"text\" placeholder=\"Search by title or author\"\r\n                onChange={(event) => this.handleSearch(event.target.value)}\r\n                />\r\n\r\n              </div>\r\n            </div>\r\n            <div className=\"search-books-results\">\r\n              <ol className=\"books-grid\">\r\n              {this.state.books.length && \r\n              <Book handleSelect={this.props.handleSelect}  book={this.state.books} />\r\n              }\r\n              </ol>\r\n            </div>\r\n          </div>\r\n\r\n         );\r\n    }\r\n}\r\n \r\nexport default Search;","import React from 'react'\r\nimport MainPage from \"./MainPage\"\r\nimport Search from \"./Search\"\r\nimport {Route} from \"react-router-dom\"\r\nimport * as BooksAPI from './BooksAPI'\r\nimport './App.css'\r\n\r\nclass BooksApp extends React.Component {\r\n  state = {  books : [],\r\n    showSearchPage: false\r\n  }\r\n    componentDidMount() {\r\n        BooksAPI.getAll().then(res => this.setState({\r\n            books : res\r\n        }) )\r\n    }\r\n    handleSelect = (book,shelf) => {\r\n      BooksAPI.update(book,shelf).then(() => (\r\n        BooksAPI.getAll().then((books) => {\r\n          this.setState({books})\r\n        })\r\n      ))\r\n  \r\n  \r\n    }\r\n\r\n  render() {\r\n    return (\r\n      \r\n      <div>\r\n\r\n        <Route exact path=\"/\" render={() => (\r\n        <MainPage handleSelect={this.handleSelect} books={this.state.books} />\r\n      )}\r\n      />\r\n\r\n      <Route path=\"/search\" render={() => (\r\n        <Search handleSelect={this.handleSelect}  />\r\n      )}\r\n      />\r\n\r\n      </div>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default BooksApp\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport {BrowserRouter} from \"react-router-dom\"\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'))\r\n"],"sourceRoot":""}